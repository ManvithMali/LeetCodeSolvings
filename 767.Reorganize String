class Solution {
    public String reorganizeString(String S) {
        
        Map <Character, Integer> mp = new HashMap <>();
        
        for (char c : S.toCharArray())            
            mp.put(c, mp.getOrDefault(c,0)+1);
            
        PriorityQueue<Character> hp = new PriorityQueue<>((c1,c2)-> mp.get(c2)-mp.get(c1));        
        for (char c : mp.keySet())
            hp.add(c);
        
        StringBuilder sb = new StringBuilder();
        
        while (hp.size()>1){            
            char c1 = hp.poll();
            char c2= hp.poll();
            
            sb.append(c1);
            sb.append(c2);
            
            mp.put(c1, mp.getOrDefault(c1,0)-1);
            mp.put(c2, mp.getOrDefault(c2,0)-1);
            if (mp.get(c1) > 0)
                hp.add(c1);
            
            if (mp.get(c2) > 0)
                hp.add(c2);            
        }
                
        if (!hp.isEmpty()){            
            char c = hp.poll();            
            if (mp.get(c) > 1)
                return "";            
            sb.append(c) ;  
        }                
        return sb.toString();
    }
}
