class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
     
        if(matrix.length == 0 || matrix[0].length == 0)
            return false;        
        int row = matrix.length;
        int col = matrix[0].length;
        int topRow =0;
        int botRow =row-1;        
        int mid=-1;
        
        while ( topRow <= botRow){
             mid= topRow +(botRow-topRow)/2;
            if (target == matrix[mid][col-1] || target == matrix[mid][0])
                return true;
            else if (target < matrix[mid][col-1] && target > matrix[mid][0])
                break;
            else if (target < matrix[mid][0])
                botRow=mid-1;
            else if (target > matrix[mid][col-1])
                topRow= mid+1;
        }
        
        if (mid != -1){
            int left =0;
            int right = col -1;
            
            while (left <= right){                
                int midel = left+(right-left)/2;
                if(matrix[mid][midel]== target)
                    return true;
                else if(matrix[mid][midel] > target)
                    right = midel-1;
                else
                    left= midel+1;                
            }            
        }else
            return false;
        
        return false;
    }
}
