public int rob(int[] nums) {
       
        if (nums.length == 1)
            return nums[0];
        if(nums.length ==2)
            return Math.max(nums[1],nums[0]);
        
        
        int max = maxRob1(nums, 0, nums.length-2);
        int max1 = maxRob1(nums, 1, nums.length-1);
        
        return Math.max(max,max1);
    }
    
    /*public int maxRob (int[] nums , int start , int end){        
        int[] dp = new int[end-start+1];        
        dp[0]= nums[start];
        dp[1]= Math.max (nums[start], nums[start+1]);                
        for (int i =2 ; i < dp.length ; i++){            
            dp[i]= Math.max(dp[i-1],dp[i-2]+nums[i+start]);        
        }        
        return dp[end-start];
    }*/
    
    
    public int maxRob1 (int[] nums , int start , int end){
        
        
        int temp1 =nums[start];
        int temp2 = Math.max (nums[start], nums[start+1]);        
               
        
        for (int i =2 ; i < (end-start+1) ; i++){            
            int val = Math.max(temp2,temp1+nums[i+start]);            
            int temp = temp2;
            temp2 = val;
            temp1 = temp;        
        }
        
        return temp2;
    }
