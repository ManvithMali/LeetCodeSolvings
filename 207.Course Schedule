class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        
        Map <Integer , List<Integer>> hm = new HashMap<>();
        int[] courseCount = new int[numCourses];
        for (int []i : prerequisites){
            int start = i[0];
            int end = i [1];
            courseCount[start]++;
            
            hm.putIfAbsent(end, new ArrayList());
            hm.get(end).add(start);            
        }
        
        
        Queue<Integer> que = new LinkedList<>();
        for (int i =0; i < numCourses ; i++){
            if(courseCount[i]==0)
                que.add(i);                
        }
        
        if(que.isEmpty())
            return false;
        
        while (!que.isEmpty()){
            int i = que.poll();
            
            if (hm.containsKey(i)){
                for (int num : hm.get(i)){
                    if(--courseCount[num]==0){
                        que.add(num);
                    }
                    
                }
                hm.remove(i);
            }
            
        }
        
        return hm.size()==0;
        
    }
}
