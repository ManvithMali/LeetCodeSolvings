/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        
        PriorityQueue <Integer> que = new PriorityQueue<>();
        
        for (ListNode node : lists){
            while (node != null){
                que.add(node.val);
                node = node.next;
            }
        }
        ListNode res = new ListNode(0);        
        ListNode head = res;
        
        while (!que.isEmpty()){        
            head.next = new ListNode(que.poll());
            head = head.next;
        }
        
        return res.next;
    }
}
